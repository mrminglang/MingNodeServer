// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 8.0.17_20200923091552 by TAF Team.
// Generated from `./MingNodeServer.jce'
// **********************************************************************

/* eslint-disable */

var assert    = require('assert');
var TafStream = require('@taf/taf-stream');
var TafError  = require('@taf/taf-rpc').error;

if (TafStream.JceStruct == undefined) {
    TafStream.JceStruct = function() {
        this._jce_double_precision_ = -1;
    }
    TafStream.JceStruct.prototype.setPrecision = function(d) {
        if ((d == -1) || (d >= 0 && d <= 15)) {
            this._jce_double_precision_ = d;
            return true;
        }
        return false;
    }
    TafStream.JceStruct.prototype.resetPrecision = function() { this._jce_double_precision_ = -1;}
    TafStream.JceStruct.prototype.hasSetPrecision = function() { return (this._jce_double_precision_ >= 0 && this._jce_double_precision_ <= 15);}
    TafStream.JceStruct.prototype.getPrecision = function() { return this._jce_double_precision_; }
}

var MingApp = MingApp || {};
module.exports.MingApp = MingApp;


MingApp.MingNodeServerImp = function () { 
    this._name   = undefined;
    this._worker = undefined;
}

MingApp.MingNodeServerImp.prototype.initialize = function () { 
    //TODO:
}

MingApp.MingNodeServerImp.prototype.onDispatch = function (current, FuncName, BinBuffer) { 
    switch (FuncName) {
        case 'mingHello' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var s = wup.readString("s");
                var r = wup.readString("r", "");
            } else if (current.getRequestVersion() === TafStream.Wup.JSON_VERSION) {
                var taf_data = JSON.parse(BinBuffer.toNodeBuffer());
                var s = taf_data.s;
                var r = "";
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var s = is.readString(1, true);
                var r = is.readString(2, false);
            }
            current.sendResponse = function (_ret, r) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeString("r", r);

                    current.doResponse(wup.encode());
                } else if (current.getRequestVersion() === TafStream.Wup.JSON_VERSION) {
                    var data = {};
                    data[""] = _ret;
                    data["r"] = r.toObject ? r.toObject() : r;
                    current.doResponse(new TafStream.BinBuffer(Buffer.from(JSON.stringify(data))));
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeString(2, r);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.mingHello(current, s, r);

            return TafError.SUCCESS;
        }
    }
    return TafError.SERVER.FUNC_NOT_FOUND;
}

MingApp.MingNodeServerImp.prototype.mingHello = function (current, s, r) {
    //TODO:
    assert.fail('mingHello function not implemented');
}





